version: '2.1'
services:
  rabbit1:
    build: rabbitmq/.
    ports:
     - "15672:15672"
     - "5672:5672"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672/"]
      interval: 2s
      timeout: 5s
      retries: 30
  rabbit2:
    build: grant-rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbit1:15672/"]
      interval: 2s
      timeout: 5s
      retries: 30
    depends_on:
      rabbit1:
        condition: service_healthy
  notification:
    build: grant-email-notification
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbit1:15672/"]
      interval: 2s
      timeout: 5s
      retries: 30
    depends_on:
      rabbit2:
        condition: service_healthy
  mypostgres:
    image: postgres
    healthcheck:
      test: "pg_isready -h localhost -d grant -p 5432 -U postgres"
      interval: 3s
      timeout: 5s
      retries: 30
    ports:
     - "5432"
    environment:
     - POSTGRES_PASSWORD=postgres
     - POSTGRES_USER=postgres
     - POSTGRES_DB=grant
  app:
    build: "grant-server"
    ports:
    - "8888:8888"
    depends_on:
      notification:
        condition: service_healthy
      mypostgres:
        condition: service_healthy
  front:
    build: "front"
    depends_on:
      - app
  nginx:
    image: nginx:1.14.0-alpine
    ports: 
      - 80:80
    volumes:
      - ./app.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - front

